<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Quantity_Parameter' datatype='integer' name='[Quantity Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2000'>
        <calculation class='tableau' formula='2000' />
        <range granularity='1' max='2000' min='1' />
      </column>
      <column caption='select_measures' datatype='string' name='[gross income Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
        <calculation class='tableau' formula='&quot;Quantity&quot;' />
        <members>
          <member value='&quot;gross income&quot;' />
          <member value='&quot;Total&quot;' />
          <member value='&quot;Tax 5\%&quot;' />
          <member value='&quot;Quantity&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='supermarket_sales - Sheet1#csv (supermarket_sales - Sheet1.csv)' inline='true' name='csv.43828.859364560187' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\Users\welcome\Desktop' driver='' filename='supermarket_sales - Sheet1.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='supermarket_sales - Sheet1#csv' table='[supermarket_sales - Sheet1#csv]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column caption='Cal_x_axis' datatype='real' name='[Calculation_1701229220218916]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Case [select_x_axis]&#13;&#10;when &apos;gross income&apos; then [gross income]&#13;&#10;when &apos;Total&apos; then [Total]&#13;&#10;when &apos;Quantity&apos; then [Quantity]&#13;&#10;when &apos;Tax 5%&apos; then [Tax 5%]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Cal_measures' datatype='real' name='[Calculation_3871229213034221]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Case [Parameters].[gross income Parameter]&#13;&#10;when &apos;gross income&apos; then [gross income]&#13;&#10;when &apos;Total&apos; then [Total]&#13;&#10;when &apos;Quantity&apos; then [Quantity]&#13;&#10;when &apos;Tax 5%&apos; then [Tax 5%]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Cal_y_axis' datatype='real' name='[Calculation_5031229220250990]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Case [select_y_axis]&#13;&#10;when &apos;gross income&apos; then [gross income]&#13;&#10;when &apos;Total&apos; then [Total]&#13;&#10;when &apos;Quantity&apos; then [Quantity]&#13;&#10;when &apos;Tax 5%&apos; then [Tax 5%]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='More or Less' datatype='boolean' name='[Calculation_7181229205716747]' role='measure' type='nominal'>
        <calculation class='tableau' formula='sum([Parameters].[Quantity Parameter])&gt;[Parameters].[Quantity Parameter]' scope-isolation='false' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Total]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[gross income]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gross income]' derivation='Sum' name='[sum:gross income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7181229205716747]' derivation='User' name='[usr:Calculation_7181229205716747:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_7181229205716747:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:City:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Mandalay&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Yangon&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Naypyitaw&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.43828.859364560187].[sum:Total:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.43828.859364560187].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.43828.859364560187].[sum:gross income:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Myanmar (Burma)&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Quantity_Parameter' datatype='integer' name='[Quantity Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2000'>
          <calculation class='tableau' formula='2000' />
          <range granularity='1' max='2000' min='1' />
        </column>
        <column caption='select_measures' datatype='string' name='[gross income Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
          <calculation class='tableau' formula='&quot;Quantity&quot;' />
          <members>
            <member value='&quot;gross income&quot;' />
            <member value='&quot;Total&quot;' />
            <member value='&quot;Tax 5\%&quot;' />
            <member value='&quot;Quantity&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Online' />
  </mapsources>
  <shared-views>
    <shared-view name='csv.43828.859364560187'>
      <datasources>
        <datasource caption='supermarket_sales - Sheet1#csv (supermarket_sales - Sheet1.csv)' name='csv.43828.859364560187' />
      </datasources>
      <datasource-dependencies datasource='csv.43828.859364560187'>
        <column datatype='string' name='[Branch]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        </column>
        <column datatype='string' name='[Gender]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[Product line]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Branch]' derivation='None' name='[none:Branch:nk]' pivot='key' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[Product line]' derivation='None' name='[none:Product line:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[csv.43828.859364560187].[none:Branch:nk]'>
        <groupfilter from='&quot;A&quot;' function='range' level='[none:Branch:nk]' to='&quot;C&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[csv.43828.859364560187].[none:City:nk]'>
        <groupfilter from='&quot;Mandalay&quot;' function='range' level='[none:City:nk]' to='&quot;Yangon&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[csv.43828.859364560187].[none:Gender:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Female&quot;' />
          <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[csv.43828.859364560187].[none:Product line:nk]'>
        <groupfilter function='level-members' level='[none:Product line:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>monthly quanity sold</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='supermarket_sales - Sheet1#csv (supermarket_sales - Sheet1.csv)' name='csv.43828.859364560187' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Quantity_Parameter' datatype='integer' name='[Quantity Parameter]' param-domain-type='range' role='measure' type='quantitative' value='2000'>
              <calculation class='tableau' formula='2000' />
              <range granularity='1' max='2000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.43828.859364560187'>
            <column datatype='string' name='[Branch]' role='dimension' type='nominal'>
            </column>
            <column caption='More or Less' datatype='boolean' name='[Calculation_7181229205716747]' role='measure' type='nominal'>
              <calculation class='tableau' formula='sum([Parameters].[Quantity Parameter])&gt;[Parameters].[Quantity Parameter]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product line]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Branch]' derivation='None' name='[none:Branch:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product line]' derivation='None' name='[none:Product line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7181229205716747]' derivation='User' name='[usr:Calculation_7181229205716747:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.43828.859364560187].[usr:Calculation_7181229205716747:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.43828.859364560187].[none:City:nk]</column>
            <column>[csv.43828.859364560187].[none:Product line:nk]</column>
            <column>[csv.43828.859364560187].[none:Gender:nk]</column>
            <column>[csv.43828.859364560187].[none:Branch:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.43828.859364560187].[usr:Calculation_7181229205716747:nk]' />
            </encodings>
            <reference-line axis-column='[Parameters].[Quantity Parameter]' formula='average' id='refline0' label-type='value' scope='per-pane' value-column='[Parameters].[Quantity Parameter]' z-order='1' />
          </pane>
          <pane id='1' y-axis-name='[Parameters].[Quantity Parameter]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.43828.859364560187].[usr:Calculation_7181229205716747:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.43828.859364560187].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.43828.859364560187].[usr:Calculation_7181229205716747:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([Parameters].[Quantity Parameter] + [csv.43828.859364560187].[sum:Quantity:qk])</rows>
        <cols>[csv.43828.859364560187].[tmn:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>city sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='supermarket_sales - Sheet1#csv (supermarket_sales - Sheet1.csv)' name='csv.43828.859364560187' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='csv.43828.859364560187'>
            <column datatype='string' name='[Branch]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product line]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Rating]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[gross income]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Branch]' derivation='None' name='[none:Branch:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product line]' derivation='None' name='[none:Product line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rating]' derivation='Sum' name='[sum:Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gross income]' derivation='Sum' name='[sum:gross income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[csv.43828.859364560187].[none:City:nk]</column>
            <column>[csv.43828.859364560187].[none:Product line:nk]</column>
            <column>[csv.43828.859364560187].[none:Gender:nk]</column>
            <column>[csv.43828.859364560187].[none:Branch:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.43828.859364560187].[Longitude (generated)]' field-type='quantitative' max='15758522.196034975' min='5641425.3957198337' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[csv.43828.859364560187].[Latitude (generated)]' field-type='quantitative' max='4886747.2443072759' min='-480205.99874707893' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.43828.859364560187].[sum:gross income:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#cfbaba</color>
                <color>#d4aaaa</color>
                <color>#d99898</color>
                <color>#df8585</color>
                <color>#e47272</color>
                <color>#e95d5d</color>
                <color>#ef4747</color>
                <color>#f43030</color>
                <color>#f91818</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.43828.859364560187].[sum:gross income:qk]' />
              <text column='[csv.43828.859364560187].[none:City:nk]' />
              <size column='[csv.43828.859364560187].[sum:Rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.43828.859364560187].[Latitude (generated)]</rows>
        <cols>[csv.43828.859364560187].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>city wise product</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='supermarket_sales - Sheet1#csv (supermarket_sales - Sheet1.csv)' name='csv.43828.859364560187' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select_measures' datatype='string' name='[gross income Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Quantity&quot;'>
              <calculation class='tableau' formula='&quot;Quantity&quot;' />
              <members>
                <member value='&quot;gross income&quot;' />
                <member value='&quot;Total&quot;' />
                <member value='&quot;Tax 5\%&quot;' />
                <member value='&quot;Quantity&quot;' />
              </members>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.43828.859364560187'>
            <column datatype='string' name='[Branch]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product line]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Branch]' derivation='None' name='[none:Branch:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product line]' derivation='None' name='[none:Product line:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[csv.43828.859364560187].[none:City:nk]</column>
            <column>[csv.43828.859364560187].[none:Product line:nk]</column>
            <column>[csv.43828.859364560187].[none:Gender:nk]</column>
            <column>[csv.43828.859364560187].[none:Branch:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Parameters].[gross income Parameter]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.43828.859364560187].[none:City:nk]</rows>
        <cols>[csv.43828.859364560187].[none:Product line:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>total income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='supermarket_sales - Sheet1#csv (supermarket_sales - Sheet1.csv)' name='csv.43828.859364560187' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.43828.859364560187'>
            <column datatype='string' name='[Branch]' role='dimension' type='nominal'>
            </column>
            <column caption='Cal_measures' datatype='real' name='[Calculation_3871229213034221]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[gross income Parameter]&#13;&#10;when &apos;gross income&apos; then [gross income]&#13;&#10;when &apos;Total&apos; then [Total]&#13;&#10;when &apos;Quantity&apos; then [Quantity]&#13;&#10;when &apos;Tax 5%&apos; then [Tax 5%]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product line]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Total]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Branch]' derivation='None' name='[none:Branch:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product line]' derivation='None' name='[none:Product line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3871229213034221]' derivation='Sum' name='[sum:Calculation_3871229213034221:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[csv.43828.859364560187].[none:City:nk]</column>
            <column>[csv.43828.859364560187].[none:Product line:nk]</column>
            <column>[csv.43828.859364560187].[none:Gender:nk]</column>
            <column>[csv.43828.859364560187].[none:Branch:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[csv.43828.859364560187].[sum:Calculation_3871229213034221:qk]' value='52' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[csv.43828.859364560187].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.43828.859364560187].[sum:Calculation_3871229213034221:qk]</rows>
        <cols>[csv.43828.859364560187].[sum:Total:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>city wise income</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='supermarket_sales - Sheet1#csv (supermarket_sales - Sheet1.csv)' name='csv.43828.859364560187' />
          </datasources>
          <datasource-dependencies datasource='csv.43828.859364560187'>
            <column datatype='string' name='[Branch]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Product line]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[gross income]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Branch]' derivation='None' name='[none:Branch:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product line]' derivation='None' name='[none:Product line:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gross income]' derivation='Sum' name='[sum:gross income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[csv.43828.859364560187].[none:City:nk]</column>
            <column>[csv.43828.859364560187].[none:Product line:nk]</column>
            <column>[csv.43828.859364560187].[none:Gender:nk]</column>
            <column>[csv.43828.859364560187].[none:Branch:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.43828.859364560187].[sum:gross income:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.43828.859364560187].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[csv.43828.859364560187].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.43828.859364560187].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.43828.859364560187].[sum:gross income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.43828.859364560187].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.43828.859364560187].[sum:Quantity:qk] + [csv.43828.859364560187].[sum:gross income:qk])</rows>
        <cols>[csv.43828.859364560187].[none:City:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run underline='true'>Supermarket sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffe791' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1600' minheight='800' minwidth='1600' />
      <zones>
        <zone h='100000' id='3' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='31' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='9375' id='8' param='[Parameters].[Quantity Parameter]' type='paramctrl' w='100000' x='0' y='0'>
            </zone>
            <zone h='4500' id='30' type='title' w='100000' x='0' y='9375'>
            </zone>
          </zone>
        </zone>
        <zone h='6000' id='15' param='[Parameters].[gross income Parameter]' type='paramctrl' w='10000' x='17125' y='39000'>
        </zone>
        <zone h='24250' id='16' name='Sheet 4' show-title='true' w='23813' x='58188' y='13750'>
        </zone>
        <zone h='9375' id='17' name='Sheet 4' param='[csv.43828.859364560187].[none:City:nk]' type='shape' w='8750' x='49438' y='27875'>
        </zone>
        <zone h='24250' id='18' name='Sheet 5' show-title='true' w='23813' x='60125' y='48250'>
        </zone>
        <zone h='6875' id='19' name='Sheet 5' param='[csv.43828.859364560187].[:Measure Names]' type='color' w='8750' x='67063' y='39625'>
        </zone>
        <zone h='24250' id='20' name='Sheet 1' show-title='true' w='23813' x='2625' y='46250'>
        </zone>
        <zone h='5500' id='21' name='Sheet 1' param='[csv.43828.859364560187].[none:City:nk]' type='filter' w='10000' x='38000' y='22500'>
        </zone>
        <zone h='4375' id='22' name='Sheet 1' param='[csv.43828.859364560187].[usr:Calculation_7181229205716747:nk]' type='color' w='8750' x='11688' y='38875'>
        </zone>
        <zone h='24250' id='23' name='Sheet 2' show-title='true' w='23813' x='938' y='11375'>
        </zone>
        <zone h='5500' id='24' name='Sheet 2' param='[csv.43828.859364560187].[none:Product line:nk]' type='filter' w='10000' x='27188' y='22250'>
        </zone>
        <zone h='24250' id='26' name='Sheet 3' show-title='true' w='23813' x='27688' y='34375'>
        </zone>
        <zone h='5500' id='27' name='Sheet 3' param='[csv.43828.859364560187].[none:Gender:nk]' type='filter' w='10000' x='39938' y='61500'>
        </zone>
        <zone h='5500' id='28' name='Sheet 3' param='[csv.43828.859364560187].[none:Branch:nk]' type='filter' w='10000' x='28313' y='61375'>
        </zone>
        <zone h='4375' id='29' name='Sheet 3' param='[Parameters].[gross income Parameter]' type='color' w='8750' x='1063' y='38000'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows show-side-pane='false'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.43828.859364560187].[usr:Calculation_7181229205716747:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='125'>
            <card mode='slider' param='[Parameters].[Quantity Parameter]' type='parameter' />
            <card mode='checkdropdown' param='[csv.43828.859364560187].[none:City:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.43828.859364560187].[none:City:nk]</field>
          <field>[csv.43828.859364560187].[usr:Calculation_7181229205716747:nk]</field>
          <field>[csv.43828.859364560187].[yr:Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.43828.859364560187].[sum:Rating:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[csv.43828.859364560187].[none:Product line:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.43828.859364560187].[none:City:nk]</field>
          <field>[csv.43828.859364560187].[none:Product line:nk]</field>
          <field>[csv.43828.859364560187].[sum:gross income:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Parameters].[gross income Parameter]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[gross income Parameter]' type='parameter' />
            <card mode='checkdropdown' param='[csv.43828.859364560187].[none:Gender:nk]' type='filter' />
            <card mode='checkdropdown' param='[csv.43828.859364560187].[none:Branch:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[gross income Parameter]</field>
          <field>[csv.43828.859364560187].[none:Branch:nk]</field>
          <field>[csv.43828.859364560187].[none:City:nk]</field>
          <field>[csv.43828.859364560187].[none:Gender:nk]</field>
          <field>[csv.43828.859364560187].[none:Product line:nk]</field>
          <field>[csv.43828.859364560187].[yr:Time:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.43828.859364560187].[none:City:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.43828.859364560187].[none:City:nk]</field>
          <field>[csv.43828.859364560187].[none:Payment:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.43828.859364560187].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.43828.859364560187].[none:City:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <active id='18' />
      <zones>
        <zone mode='slider' name='' param='[Parameters].[Quantity Parameter]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[gross income Parameter]' type='paramctrl' />
        <zone name='Sheet 4'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[csv.43828.859364560187].[none:City:nk]' type='shape'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
        </zone>
        <zone name='Sheet 4' pane-specification-id='0' param='[csv.43828.859364560187].[none:City:nk]' type='shape' />
        <zone name='Sheet 5'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[csv.43828.859364560187].[:Measure Names]'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[csv.43828.859364560187].[none:City:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[csv.43828.859364560187].[sum:gross income:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[csv.43828.859364560187].[none:City:nk]</field>
                    <field>[csv.43828.859364560187].[sum:gross income:qk]</field>
                    <field>[csv.43828.859364560187].[:Measure Names]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Mandalay&quot;</value>
                  <value>5057.0320000000029</value>
                  <value>&quot;[csv.43828.859364560187].[sum:gross income:qk]&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
        <zone name='Sheet 5' pane-specification-id='1' param='[csv.43828.859364560187].[:Measure Names]' type='color' />
        <zone name='Sheet 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='checkdropdown' name='Sheet 1' param='[csv.43828.859364560187].[none:City:nk]' type='filter' />
        <zone name='Sheet 1' pane-specification-id='1' param='[csv.43828.859364560187].[usr:Calculation_7181229205716747:nk]' type='color' />
        <zone name='Sheet 2'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='checkdropdown' name='Sheet 2' param='[csv.43828.859364560187].[none:Product line:nk]' type='filter' />
        <zone mode='checkdropdown' name='Sheet 3' param='[csv.43828.859364560187].[none:Gender:nk]' type='filter' />
        <zone mode='checkdropdown' name='Sheet 3' param='[csv.43828.859364560187].[none:Branch:nk]' type='filter' />
        <zone name='Sheet 3' pane-specification-id='0' param='[Parameters].[gross income Parameter]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dWXBc2Xnfv3P3pfcN+06AIAkOOSSHmkUzki3J
      WsryeI3tslMu+SHllzipch5SyUv8kMpDUomdSsUqL4mrEsdxlJJkxR7JlsYz4mg0o1m5LyBA
      AsSObvR29+2cPBzistEA2Bg20ARn7q9YMxfdt8893fd/v/Od73znHERW/hAiIh4V5nFXIOLJ
      5r6ADM2ZW7Ga3yTE0N2K5tkeDl+6PVsr1bxdyyPEsoMDqGfEIYWj/7vwQWksx397Witk2C6F
      mS15WLPjKr9Q8znfd1lhoFv61OmsgPDdZfvWvCbiQErIYkJcnK2ISRk8X40LEmDk+9MbOK2w
      osROHU33ZITH+/UiDpr7Fkhg4I0PNmzTvXpHvzZTL1csRmR0PWB8HyOmv1u8MmsICACgtGF9
      aio1s2jOLRkcDuZXrbmSx/OMa/mzd2sBy7qGO7tklrQgUs8nARQ60dgPrACp4g5ekV63iwYh
      jusAe2w41tkaRhxq7jdh5ZJ26Y724lTqlVfXUnkZWU7ZgM9+dkhlAABiCSmWAAD5MVY04nBy
      396oitDbpTp1o5CXV3VilrSurFBzHm/dIp4A7lsgy/ZM269Jkiy6L/UIHkpulO2eyOJEtAJF
      gcSIdogCiRFtEQkooi0iAUW0RSSgiLaIBBTRFpGAItoiElBEW0QCimiLSEARbREJKKItIgFF
      tAX3uCsQcVgoF/X/9s25WCHxO78wuPdPRQKKuM+Vy8XhE91ffDo5N7Nxu84cz8ClNbw+W1yp
      +oPj2V99Kfc/v3ln1SC//vOjr/39nbW6//zZwjuXN6ImLOI+z73Q7xerf/43i3XNXau4tuGu
      bLhzy/bv/pPjqzfW/t8Pl2fKQZLD37mwNrdo/NZvHutVSKontYOAbszWbt6p73aZb39/4SC/
      RcRjo1Zzjh7LVRcrOmaWlvVLt+sAAATfnKlVbJJS2HxeefZs19d+rh9YNh1j6afYf/MvvkyP
      sOv+8V/dsezg7Rv165fX6jXnXsW/PKNPDil/+PWrmb74//qLG2se51nOmz9a+vaFYnXDmC76
      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
      iWz9rPxvN2MAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
